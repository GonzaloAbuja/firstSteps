{
  "version": 3,
  "sources": ["../../ol/interaction/Select.js"],
  "sourcesContent": ["/**\r\n * @module ol/interaction/Select\r\n */\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport Event from '../events/Event.js';\r\nimport Feature from '../Feature.js';\r\nimport Interaction from './Interaction.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport {TRUE} from '../functions.js';\r\nimport {clear} from '../obj.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\nimport {extend} from '../array.js';\r\nimport {getUid} from '../util.js';\r\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst SelectEventType = {\r\n  /**\r\n   * Triggered when feature(s) has been (de)selected.\r\n   * @event SelectEvent#select\r\n   * @api\r\n   */\r\n  SELECT: 'select',\r\n};\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\r\n * selected or `false` otherwise.\r\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\r\n * want to use different events for add and remove instead of `toggle`.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. This is the event\r\n * for the selected features as a whole. By default, this is\r\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\r\n * feature and removes any that were in the selection. Clicking outside any\r\n * feature removes all from the selection.\r\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\r\n * from the selection.\r\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\r\n * A list of layers from which features should be selected. Alternatively, a\r\n * filter function can be provided. The function will be called for each layer\r\n * in the map and should return `true` for layers that you want to be\r\n * selectable. If the option is absent, all visible layers will be considered\r\n * selectable.\r\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\r\n * Style for the selected features. By default the default edit style is used\r\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\r\n * any style changes for selected features.\r\n * If set to a falsey value, the selected feature's style will not change.\r\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\r\n * want to use different events for add and remove instead of `toggle`.\r\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. This is in addition\r\n * to the `condition` event. By default,\r\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\r\n * well as the `condition` event, adds that feature to the current selection if\r\n * it is not currently selected, and removes it if it is. See `add` and `remove`\r\n * if you want to use different events instead of a toggle.\r\n * @property {boolean} [multi=false] A boolean that determines if the default\r\n * behaviour should select only single features or all (overlapping) features at\r\n * the clicked map position. The default of `false` means single select.\r\n * @property {Collection<Feature>} [features]\r\n * Collection where the interaction will place selected features. Optional. If\r\n * not set the interaction will create a collection. In any case the collection\r\n * used by the interaction is returned by\r\n * {@link module:ol/interaction/Select~Select#getFeatures}.\r\n * @property {FilterFunction} [filter] A function\r\n * that takes an {@link module:ol/Feature~Feature} and an\r\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\r\n * selected or `false` otherwise.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\r\n * the radius around the given position will be checked for features.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\r\n * this type.\r\n */\r\nexport class SelectEvent extends Event {\r\n  /**\r\n   * @param {SelectEventType} type The event type.\r\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\r\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\r\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n   */\r\n  constructor(type, selected, deselected, mapBrowserEvent) {\r\n    super(type);\r\n\r\n    /**\r\n     * Selected features array.\r\n     * @type {Array<import(\"../Feature.js\").default>}\r\n     * @api\r\n     */\r\n    this.selected = selected;\r\n\r\n    /**\r\n     * Deselected features array.\r\n     * @type {Array<import(\"../Feature.js\").default>}\r\n     * @api\r\n     */\r\n    this.deselected = deselected;\r\n\r\n    /**\r\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserEvent;\r\n  }\r\n}\r\n\r\n/**\r\n * Original feature styles to reset to when features are no longer selected.\r\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\r\n */\r\nconst originalFeatureStyles = {};\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active'|'select', Return>} SelectOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for selecting vector features. By default, selected features are\r\n * styled differently, so this interaction can be used for visual highlighting,\r\n * as well as selecting features for other actions, such as modification or\r\n * output. There are three ways of controlling which features are selected:\r\n * using the browser event as defined by the `condition` and optionally the\r\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\r\n * further feature filter using the `filter` option.\r\n *\r\n * @fires SelectEvent\r\n * @api\r\n */\r\nclass Select extends Interaction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {SelectOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    options = options ? options : {};\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.boundAddFeature_ = this.addFeature_.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : singleClick;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.removeCondition_ = options.removeCondition\r\n      ? options.removeCondition\r\n      : never;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.toggleCondition_ = options.toggleCondition\r\n      ? options.toggleCondition\r\n      : shiftKeyOnly;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.multi_ = options.multi ? options.multi : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {FilterFunction}\r\n     */\r\n    this.filter_ = options.filter ? options.filter : TRUE;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\r\n     */\r\n    this.style_ =\r\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Collection<Feature>}\r\n     */\r\n    this.features_ = options.features || new Collection();\r\n\r\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\r\n    let layerFilter;\r\n    if (options.layers) {\r\n      if (typeof options.layers === 'function') {\r\n        layerFilter = options.layers;\r\n      } else {\r\n        const layers = options.layers;\r\n        layerFilter = function (layer) {\r\n          return layers.includes(layer);\r\n        };\r\n      }\r\n    } else {\r\n      layerFilter = TRUE;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\r\n     */\r\n    this.layerFilter_ = layerFilter;\r\n\r\n    /**\r\n     * An association between selected feature (key)\r\n     * and layer (value)\r\n     * @private\r\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\r\n     */\r\n    this.featureLayerAssociation_ = {};\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n   * @private\r\n   */\r\n  addFeatureLayerAssociation_(feature, layer) {\r\n    this.featureLayerAssociation_[getUid(feature)] = layer;\r\n  }\r\n\r\n  /**\r\n   * Get the selected features.\r\n   * @return {Collection<Feature>} Features collection.\r\n   * @api\r\n   */\r\n  getFeatures() {\r\n    return this.features_;\r\n  }\r\n\r\n  /**\r\n   * Returns the Hit-detection tolerance.\r\n   * @return {number} Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  getHitTolerance() {\r\n    return this.hitTolerance_;\r\n  }\r\n\r\n  /**\r\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\r\n   * a selected feature.\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @return {import('../layer/Vector.js').default} Layer.\r\n   * @api\r\n   */\r\n  getLayer(feature) {\r\n    return /** @type {import('../layer/Vector.js').default} */ (\r\n      this.featureLayerAssociation_[getUid(feature)]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Hit-detection tolerance. Pixels inside the radius around the given position\r\n   * will be checked for features.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  setHitTolerance(hitTolerance) {\r\n    this.hitTolerance_ = hitTolerance;\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map, if any,  and attach it to a new\r\n   * map, if any. Pass `null` to just remove the interaction from the current map.\r\n   * @param {import(\"../Map.js\").default|null} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    const currentMap = this.getMap();\r\n    if (currentMap && this.style_) {\r\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\r\n    }\r\n    super.setMap(map);\r\n    if (map) {\r\n      this.features_.addEventListener(\r\n        CollectionEventType.ADD,\r\n        this.boundAddFeature_,\r\n      );\r\n      this.features_.addEventListener(\r\n        CollectionEventType.REMOVE,\r\n        this.boundRemoveFeature_,\r\n      );\r\n\r\n      if (this.style_) {\r\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\r\n      }\r\n    } else {\r\n      this.features_.removeEventListener(\r\n        CollectionEventType.ADD,\r\n        this.boundAddFeature_,\r\n      );\r\n      this.features_.removeEventListener(\r\n        CollectionEventType.REMOVE,\r\n        this.boundRemoveFeature_,\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\r\n   * @private\r\n   */\r\n  addFeature_(evt) {\r\n    const feature = evt.element;\r\n    if (this.style_) {\r\n      this.applySelectedStyle_(feature);\r\n    }\r\n    if (!this.getLayer(feature)) {\r\n      const layer = /** @type {VectorLayer} */ (\r\n        this.getMap()\r\n          .getAllLayers()\r\n          .find(function (layer) {\r\n            if (\r\n              layer instanceof VectorLayer &&\r\n              layer.getSource() &&\r\n              layer.getSource().hasFeature(feature)\r\n            ) {\r\n              return layer;\r\n            }\r\n          })\r\n      );\r\n      if (layer) {\r\n        this.addFeatureLayerAssociation_(feature, layer);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\r\n   * @private\r\n   */\r\n  removeFeature_(evt) {\r\n    if (this.style_) {\r\n      this.restorePreviousStyle_(evt.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\r\n   */\r\n  getStyle() {\r\n    return this.style_;\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @private\r\n   */\r\n  applySelectedStyle_(feature) {\r\n    const key = getUid(feature);\r\n    if (!(key in originalFeatureStyles)) {\r\n      originalFeatureStyles[key] = feature.getStyle();\r\n    }\r\n    feature.setStyle(this.style_);\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @private\r\n   */\r\n  restorePreviousStyle_(feature) {\r\n    const interactions = this.getMap().getInteractions().getArray();\r\n    for (let i = interactions.length - 1; i >= 0; --i) {\r\n      const interaction = interactions[i];\r\n      if (\r\n        interaction !== this &&\r\n        interaction instanceof Select &&\r\n        interaction.getStyle() &&\r\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\r\n      ) {\r\n        feature.setStyle(interaction.getStyle());\r\n        return;\r\n      }\r\n    }\r\n\r\n    const key = getUid(feature);\r\n    feature.setStyle(originalFeatureStyles[key]);\r\n    delete originalFeatureStyles[key];\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature.\r\n   * @private\r\n   */\r\n  removeFeatureLayerAssociation_(feature) {\r\n    delete this.featureLayerAssociation_[getUid(feature)];\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\r\n   * selected state of features.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!this.condition_(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n    const add = this.addCondition_(mapBrowserEvent);\r\n    const remove = this.removeCondition_(mapBrowserEvent);\r\n    const toggle = this.toggleCondition_(mapBrowserEvent);\r\n    const set = !add && !remove && !toggle;\r\n    const map = mapBrowserEvent.map;\r\n    const features = this.getFeatures();\r\n\r\n    /**\r\n     * @type {Array<Feature>}\r\n     */\r\n    const deselected = [];\r\n\r\n    /**\r\n     * @type {Array<Feature>}\r\n     */\r\n    const selected = [];\r\n\r\n    if (set) {\r\n      // Replace the currently selected feature(s) with the feature(s) at the\r\n      // pixel, or clear the selected feature(s) if there is no feature at\r\n      // the pixel.\r\n      clear(this.featureLayerAssociation_);\r\n      map.forEachFeatureAtPixel(\r\n        mapBrowserEvent.pixel,\r\n        /**\r\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         * @return {boolean|undefined} Continue to iterate over the features.\r\n         */\r\n        (feature, layer) => {\r\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\r\n            return;\r\n          }\r\n          this.addFeatureLayerAssociation_(feature, layer);\r\n          selected.push(feature);\r\n          return !this.multi_;\r\n        },\r\n        {\r\n          layerFilter: this.layerFilter_,\r\n          hitTolerance: this.hitTolerance_,\r\n        },\r\n      );\r\n      for (let i = features.getLength() - 1; i >= 0; --i) {\r\n        const feature = features.item(i);\r\n        const index = selected.indexOf(feature);\r\n        if (index > -1) {\r\n          // feature is already selected\r\n          selected.splice(index, 1);\r\n        } else {\r\n          features.remove(feature);\r\n          deselected.push(feature);\r\n        }\r\n      }\r\n      if (selected.length !== 0) {\r\n        features.extend(selected);\r\n      }\r\n    } else {\r\n      // Modify the currently selected feature(s).\r\n      map.forEachFeatureAtPixel(\r\n        mapBrowserEvent.pixel,\r\n        /**\r\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         * @return {boolean|undefined} Continue to iterate over the features.\r\n         */\r\n        (feature, layer) => {\r\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\r\n            return;\r\n          }\r\n          if ((add || toggle) && !features.getArray().includes(feature)) {\r\n            this.addFeatureLayerAssociation_(feature, layer);\r\n            selected.push(feature);\r\n          } else if (\r\n            (remove || toggle) &&\r\n            features.getArray().includes(feature)\r\n          ) {\r\n            deselected.push(feature);\r\n            this.removeFeatureLayerAssociation_(feature);\r\n          }\r\n          return !this.multi_;\r\n        },\r\n        {\r\n          layerFilter: this.layerFilter_,\r\n          hitTolerance: this.hitTolerance_,\r\n        },\r\n      );\r\n      for (let j = deselected.length - 1; j >= 0; --j) {\r\n        features.remove(deselected[j]);\r\n      }\r\n      features.extend(selected);\r\n    }\r\n    if (selected.length > 0 || deselected.length > 0) {\r\n      this.dispatchEvent(\r\n        new SelectEvent(\r\n          SelectEventType.SELECT,\r\n          selected,\r\n          deselected,\r\n          mapBrowserEvent,\r\n        ),\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n  const styles = createEditingStyle();\r\n  extend(styles['Polygon'], styles['LineString']);\r\n  extend(styles['GeometryCollection'], styles['LineString']);\r\n\r\n  return function (feature) {\r\n    if (!feature.getGeometry()) {\r\n      return null;\r\n    }\r\n    return styles[feature.getGeometry().getType()];\r\n  };\r\n}\r\n\r\nexport default Select;\r\n"],
  "mappings": "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",
  "names": ["layer"]
}
